parameters:
 - name: ServiceConnection
 - name: ResourceGroupName
 - name: Environment
 - name: Location
 - name: TenantID
 - name: SubscripIdTerra

steps:
- checkout: self
- task: TerraformInstaller@0
  displayName: Install Terraform latest

- script: echo ${{parameters.TenantID}} 
  displayName: 'Echo TenantID'

- task: TerraformTaskV2@2
  displayName: 'Terraform : Init'
  inputs:
    workingDirectory: ././Infrastructure/TerraformSimple
    backendServiceArm:   ${{ parameters.ServiceConnection }}
    backendAzureRmResourceGroupName: "NetworkWatcherRG"
    backendAzureRmStorageAccountName: "${{ lower(parameters.Environment) }}terrastate919"
    backendAzureRmContainerName: tfstate-workit
    backendAzureRmKey: terraform.tfstate

- task: TerraformTaskV2@2
  displayName: 'Terraform : Plan'
  inputs:
    workingDirectory: ././Infrastructure/TerraformSimple
    command: plan
    environmentServiceNameAzureRM:  ${{ parameters.ServiceConnection }}
    commandOptions: -var="resourcegroup=${{ parameters.ResourceGroupName }}" -var="subscription_id=${{ parameters.SubscripIdTerra }}" -var="envvar=${{ parameters.Environment }}" -var="location=${{parameters.Location}}" -var="tenant_id=${{parameters.TenantID}}"

- task: TerraformTaskV2@2
  displayName: 'Terraform : Validate and Apply'
  inputs:
    command: apply
    environmentServiceNameAzureRM:  ${{ parameters.ServiceConnection }}
    workingDirectory: ././Infrastructure/TerraformSimple
    commandOptions: -var="resourcegroup=${{ parameters.ResourceGroupName }}" -var="subscription_id=${{ parameters.SubscripIdTerra }}" -var="envvar=${{ parameters.Environment }}" -var="location=${{parameters.Location}}" -var="tenant_id=${{parameters.TenantID}}"
